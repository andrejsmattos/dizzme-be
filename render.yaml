# `render.yaml` - Configuração para o Render Blueprint

# Este arquivo define os serviços que o Render irá criar e gerenciar
# para sua aplicação.

services:
  # Serviço para a aplicação de backend (Spring Boot)
  - type: web
    name: dizzme-backend
    env: docker
    dockerfilePath: backend/Dockerfile # Caminho para o Dockerfile do backend
    # O Render usa a porta 80, 443 por padrão para expor o serviço
    # Não precisa de `ports` ou `EXPOSE`
    # O Render automaticamente mapeia as variáveis de ambiente
    # definidas no painel do Blueprint para este serviço.

  # Serviço para a aplicação de frontend (Angular)
  - type: web
    name: dizzme-frontend
    env: docker
    dockerfilePath: frontend/Dockerfile # Caminho para o Dockerfile do frontend
    # Este serviço servirá os arquivos estáticos do Angular
    # Você não precisa expor a porta 80 aqui, o Render fará isso
    # automaticamente e o roteamento será tratado por ele.

  # Serviço para o banco de dados PostgreSQL
  - type: psql
    name: dizzme-postgres
    plan: starter # Plano de banco de dados, "starter" é bom para começar
