version: '3.8'

services:
  # O serviço 'postgres' foi removido, pois o banco de dados agora está no Supabase.

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: dizzme-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dizzme-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Aplicação Spring Boot
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dizzme-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      # Alterar essas variáveis com os dados do seu projeto Supabase
      SPRING_DATASOURCE_URL: jdbc:postgresql://db.swjsmsjkkyrutscfaqbw.supabase.co:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dizzme-super-secret-key-for-jwt-tokens-2024-docker
      FRONTEND_URL: http://localhost:4200
      CORS_ORIGINS: http://localhost:4200,http://localhost:3000
    ports:
      - "8081:8080" # Alterado de 8080 para 8081
    depends_on:
      # Dependência do 'postgres' foi removida
      redis:
        condition: service_healthy
    networks:
      - dizzme-network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Frontend Angular
  frontend:
    build:
      context: ../dizzme-frontend
      dockerfile: Dockerfile
    container_name: dizzme-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - dizzme-network
    restart: unless-stopped
    environment:
      API_URL: http://localhost:8080/api

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: dizzme-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - dizzme-network
    restart: unless-stopped

  # PgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dizzme-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dizzme.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    # Removido a dependência do postgres
    networks:
      - dizzme-network
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  dizzme-network:
    driver: bridge
